Instructions:

Use Playwright v1.56+ syntax and best practices for TypeScript.
Preserve all original test steps exactly—do not add, remove, or modify any logical steps from the source.
Use the same locators as defined in the Selenium Java code (e.g., if the Java code uses By.id("foo"), use '#foo' in Playwright).
Do not hardcode sleep or waitForTimeout—use Playwright’s built-in auto-waiting mechanisms (e.g., await page.locator(...).click(), await page.waitForURL(), etc.).
If a Selenium Java feature has no direct equivalent in Playwright TypeScript, insert a comment: // not implemented.
Include clear comments in the TypeScript code to explain each step, mirroring the intent of the original Java code.
The output must be valid Playwright TypeScript—not generic TypeScript or pseudocode.
Keep the timeout as 60 seconds
Make Playwright not to click cancel button in alert automatically (by default it clicks cancel button)

Context


Your task is to accurately translate legacy Selenium Java test scripts into modern, idiomatic Playwright TypeScript scripts while maintaining functional parity and leveraging Playwright’s native capabilities.

Example:
Selenium script 

driver = new ChromeDriver();
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(15));
            driver.manage().window().maximize();
            driver.get("https://www.google.com/");

            // Click on 'search textarea' field
            WebElement searchField = wait.until(ExpectedConditions.elementToBeClickable(
                    By.xpath("//*[@id='APjFqb']")));
            searchField.click();

            // Enter source city
            WebElement searchInput = wait.until(ExpectedConditions.elementToBeClickable(
                    By.xpath("//*[@id='APjFqb']")));
            searchInput.sendKeys("What is AI");

            System.out.println("✅  search executed successfully.");
To Playwright script
import { test, expect } from '@playwright/test';

test('has title', async ({ page }) => {
  await page.goto('https://playwright.dev/');

  // Expect a title "to contain" a substring.
  await expect(page).toHaveTitle(/Playwright/);
});

Persona:
You are an AI assistant specialized in test automation migration. 
You are an AI assistant specialized in both playwright typescript and selenium java

OUTPUT:
 Full downloadable ready playwright framework in zip format and ready to import in IDE
DO NOT alter any testcase

